# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+:}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

if [ "$color_prompt" = yes ]; then
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    PS1="${debian_chroot:+($debian_chroot)}[\t]\u@\h:\w\[\033[01;30m\]\$(__git_ps1)\[\033[00m\]\$ "
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

if [ -f ~/.dotfiles/.bash_prompt ]; then
  source ~/.dotfiles/.bash_prompt
fi

if [ -f ~/.dotfiles/.bash_generic ]; then
  source ~/.dotfiles/.bash_generic
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'
# cnu tools
alias sconsole='source /etc/cnu/cnu_env; /export/web/cnuapp/script/console $(echo $RAILS_ENV)'

# cnu shortcuts
alias cnu='cd /export/web/cnuapp'
alias prod='cd /export/web'
alias app='cd /export/web/cnuapp/ruby/web/FrontEnd/app'
alias views='cd /export/web/cnuapp/ruby/web/FrontEnd/app/views'
alias public='cd /export/web/cnuapp/ruby/web/FrontEnd/public'
alias sass='cd /export/web/cnu_sass/lib/sass/'
alias css='cd /export/web/cnu_sass/lib/sass/'

# logs
alias logs='cd /var/log/cnuapp'
alias dlogs='rm *.log; rm lsws.log.*'
alias flog='tail -f /var/log/cnuapp/frontend.log'
alias plog='tail -f /var/log/cnuapp/portal.log'
alias elog='tail -f /var/log/cnuapp/stderr.log'
alias slog='tail -f /export/web/cnuapp/web/cnuapp/var/service_mgr*/*.log'
alias findben='tail -f * | grep "BEN"'

alias rpsql='sudo killall postgres && sudo /etc/init.d/postgresql-8.3 start'
alias rtoneloc='sudo sv restart /var/service/toneloc_api_services'
alias rmem='sudo /etc/init.d/memcached restart'
alias rclean='/export/web/toneloc/script/db_cleaner'
alias rsv='sudo sv restart /var/service/*'
alias rlsws='sudo sv restart /var/service/lsws'
# alias rdb='cd /export/web/cnuapp && bin/cnurake db:rebuild name=cnuapp_dev_gb cl=GB ver=9.1 force=1'
alias psqlstop='sudo psql_ctl /etc/init.d/postgresql stop'
alias rdb='cd /export/web/cnuapp && bin/cnurake db:rebuild name=cnuapp_dev cl=US'
alias apply_patch='sudo -u postgres ./apply_patch.sh $1 $2'

alias testyml='vim -O /export/web/cnuapp/etc/test.yml /export/web/cnuapp/etc/test_development.yml'
alias ce='vim /etc/cnu/cnu_env'

alias stop_litespeed='sudo sv stop /var/service/lsws'
alias restart_litespeed='sudo sv restart /var/service/lsws'
alias stop_psql='sudo /etc/init.d/postgresql stop'
alias start_psql='sudo /etc/init.d/postgresql start'
alias restart_psql='stop_psql && start_psql'
alias reset_db='stop_litespeed && restart_psql && rdb && restart_litespeed'
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

